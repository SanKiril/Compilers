Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> file
Rule 1     file -> object
Rule 2     file -> empty
Rule 3     object -> { object_content }
Rule 4     object_content -> object_entry , object_content
Rule 5     object_content -> object_entry
Rule 6     object_content -> empty
Rule 7     object_entry -> key : value
Rule 8     key -> STRING_EXPLICIT
Rule 9     key -> STRING_IMPLICIT
Rule 10    value -> array
Rule 11    value -> object
Rule 12    value -> comparison
Rule 13    value -> number
Rule 14    value -> TR
Rule 15    value -> FL
Rule 16    value -> NULL
Rule 17    value -> STRING_EXPLICIT
Rule 18    array -> [ array_content ]
Rule 19    array_content -> object , array_content
Rule 20    array_content -> object
Rule 21    array_content -> empty
Rule 22    comparison -> number COMPARATOR number
Rule 23    number -> SCIENTIFIC
Rule 24    number -> REAL
Rule 25    number -> HEXADECIMAL
Rule 26    number -> OCTAL
Rule 27    number -> BINARY
Rule 28    number -> INTEGER
Rule 29    empty -> <empty>

Terminals, with rules where they appear

,                    : 4 19
:                    : 7
BINARY               : 27
COMPARATOR           : 22
FL                   : 15
HEXADECIMAL          : 25
INTEGER              : 28
NULL                 : 16
OCTAL                : 26
REAL                 : 24
SCIENTIFIC           : 23
STRING_EXPLICIT      : 8 17
STRING_IMPLICIT      : 9
TR                   : 14
[                    : 18
]                    : 18
error                : 
{                    : 3
}                    : 3

Nonterminals, with rules where they appear

array                : 10
array_content        : 18 19
comparison           : 12
empty                : 2 6 21
file                 : 0
key                  : 7
number               : 13 22 22
object               : 1 11 19 20
object_content       : 3 4
object_entry         : 4 5
value                : 7

Parsing method: LALR

state 0

    (0) S' -> . file
    (1) file -> . object
    (2) file -> . empty
    (3) object -> . { object_content }
    (29) empty -> .

    {               shift and go to state 4
    $end            reduce using rule 29 (empty -> .)

    file                           shift and go to state 1
    object                         shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> file .



state 2

    (1) file -> object .

    $end            reduce using rule 1 (file -> object .)


state 3

    (2) file -> empty .

    $end            reduce using rule 2 (file -> empty .)


state 4

    (3) object -> { . object_content }
    (4) object_content -> . object_entry , object_content
    (5) object_content -> . object_entry
    (6) object_content -> . empty
    (7) object_entry -> . key : value
    (29) empty -> .
    (8) key -> . STRING_EXPLICIT
    (9) key -> . STRING_IMPLICIT

    }               reduce using rule 29 (empty -> .)
    STRING_EXPLICIT shift and go to state 9
    STRING_IMPLICIT shift and go to state 10

    object_content                 shift and go to state 5
    object_entry                   shift and go to state 6
    empty                          shift and go to state 7
    key                            shift and go to state 8

state 5

    (3) object -> { object_content . }

    }               shift and go to state 11


state 6

    (4) object_content -> object_entry . , object_content
    (5) object_content -> object_entry .

    ,               shift and go to state 12
    }               reduce using rule 5 (object_content -> object_entry .)


state 7

    (6) object_content -> empty .

    }               reduce using rule 6 (object_content -> empty .)


state 8

    (7) object_entry -> key . : value

    :               shift and go to state 13


state 9

    (8) key -> STRING_EXPLICIT .

    :               reduce using rule 8 (key -> STRING_EXPLICIT .)


state 10

    (9) key -> STRING_IMPLICIT .

    :               reduce using rule 9 (key -> STRING_IMPLICIT .)


state 11

    (3) object -> { object_content } .

    $end            reduce using rule 3 (object -> { object_content } .)
    ,               reduce using rule 3 (object -> { object_content } .)
    }               reduce using rule 3 (object -> { object_content } .)
    ]               reduce using rule 3 (object -> { object_content } .)


state 12

    (4) object_content -> object_entry , . object_content
    (4) object_content -> . object_entry , object_content
    (5) object_content -> . object_entry
    (6) object_content -> . empty
    (7) object_entry -> . key : value
    (29) empty -> .
    (8) key -> . STRING_EXPLICIT
    (9) key -> . STRING_IMPLICIT

    }               reduce using rule 29 (empty -> .)
    STRING_EXPLICIT shift and go to state 9
    STRING_IMPLICIT shift and go to state 10

    object_entry                   shift and go to state 6
    object_content                 shift and go to state 14
    empty                          shift and go to state 7
    key                            shift and go to state 8

state 13

    (7) object_entry -> key : . value
    (10) value -> . array
    (11) value -> . object
    (12) value -> . comparison
    (13) value -> . number
    (14) value -> . TR
    (15) value -> . FL
    (16) value -> . NULL
    (17) value -> . STRING_EXPLICIT
    (18) array -> . [ array_content ]
    (3) object -> . { object_content }
    (22) comparison -> . number COMPARATOR number
    (23) number -> . SCIENTIFIC
    (24) number -> . REAL
    (25) number -> . HEXADECIMAL
    (26) number -> . OCTAL
    (27) number -> . BINARY
    (28) number -> . INTEGER

    TR              shift and go to state 20
    FL              shift and go to state 21
    NULL            shift and go to state 22
    STRING_EXPLICIT shift and go to state 23
    [               shift and go to state 24
    {               shift and go to state 4
    SCIENTIFIC      shift and go to state 25
    REAL            shift and go to state 26
    HEXADECIMAL     shift and go to state 27
    OCTAL           shift and go to state 28
    BINARY          shift and go to state 29
    INTEGER         shift and go to state 30

    value                          shift and go to state 15
    array                          shift and go to state 16
    object                         shift and go to state 17
    comparison                     shift and go to state 18
    number                         shift and go to state 19

state 14

    (4) object_content -> object_entry , object_content .

    }               reduce using rule 4 (object_content -> object_entry , object_content .)


state 15

    (7) object_entry -> key : value .

    ,               reduce using rule 7 (object_entry -> key : value .)
    }               reduce using rule 7 (object_entry -> key : value .)


state 16

    (10) value -> array .

    ,               reduce using rule 10 (value -> array .)
    }               reduce using rule 10 (value -> array .)


state 17

    (11) value -> object .

    ,               reduce using rule 11 (value -> object .)
    }               reduce using rule 11 (value -> object .)


state 18

    (12) value -> comparison .

    ,               reduce using rule 12 (value -> comparison .)
    }               reduce using rule 12 (value -> comparison .)


state 19

    (13) value -> number .
    (22) comparison -> number . COMPARATOR number

    ,               reduce using rule 13 (value -> number .)
    }               reduce using rule 13 (value -> number .)
    COMPARATOR      shift and go to state 31


state 20

    (14) value -> TR .

    ,               reduce using rule 14 (value -> TR .)
    }               reduce using rule 14 (value -> TR .)


state 21

    (15) value -> FL .

    ,               reduce using rule 15 (value -> FL .)
    }               reduce using rule 15 (value -> FL .)


state 22

    (16) value -> NULL .

    ,               reduce using rule 16 (value -> NULL .)
    }               reduce using rule 16 (value -> NULL .)


state 23

    (17) value -> STRING_EXPLICIT .

    ,               reduce using rule 17 (value -> STRING_EXPLICIT .)
    }               reduce using rule 17 (value -> STRING_EXPLICIT .)


state 24

    (18) array -> [ . array_content ]
    (19) array_content -> . object , array_content
    (20) array_content -> . object
    (21) array_content -> . empty
    (3) object -> . { object_content }
    (29) empty -> .

    {               shift and go to state 4
    ]               reduce using rule 29 (empty -> .)

    array_content                  shift and go to state 32
    object                         shift and go to state 33
    empty                          shift and go to state 34

state 25

    (23) number -> SCIENTIFIC .

    COMPARATOR      reduce using rule 23 (number -> SCIENTIFIC .)
    ,               reduce using rule 23 (number -> SCIENTIFIC .)
    }               reduce using rule 23 (number -> SCIENTIFIC .)


state 26

    (24) number -> REAL .

    COMPARATOR      reduce using rule 24 (number -> REAL .)
    ,               reduce using rule 24 (number -> REAL .)
    }               reduce using rule 24 (number -> REAL .)


state 27

    (25) number -> HEXADECIMAL .

    COMPARATOR      reduce using rule 25 (number -> HEXADECIMAL .)
    ,               reduce using rule 25 (number -> HEXADECIMAL .)
    }               reduce using rule 25 (number -> HEXADECIMAL .)


state 28

    (26) number -> OCTAL .

    COMPARATOR      reduce using rule 26 (number -> OCTAL .)
    ,               reduce using rule 26 (number -> OCTAL .)
    }               reduce using rule 26 (number -> OCTAL .)


state 29

    (27) number -> BINARY .

    COMPARATOR      reduce using rule 27 (number -> BINARY .)
    ,               reduce using rule 27 (number -> BINARY .)
    }               reduce using rule 27 (number -> BINARY .)


state 30

    (28) number -> INTEGER .

    COMPARATOR      reduce using rule 28 (number -> INTEGER .)
    ,               reduce using rule 28 (number -> INTEGER .)
    }               reduce using rule 28 (number -> INTEGER .)


state 31

    (22) comparison -> number COMPARATOR . number
    (23) number -> . SCIENTIFIC
    (24) number -> . REAL
    (25) number -> . HEXADECIMAL
    (26) number -> . OCTAL
    (27) number -> . BINARY
    (28) number -> . INTEGER

    SCIENTIFIC      shift and go to state 25
    REAL            shift and go to state 26
    HEXADECIMAL     shift and go to state 27
    OCTAL           shift and go to state 28
    BINARY          shift and go to state 29
    INTEGER         shift and go to state 30

    number                         shift and go to state 35

state 32

    (18) array -> [ array_content . ]

    ]               shift and go to state 36


state 33

    (19) array_content -> object . , array_content
    (20) array_content -> object .

    ,               shift and go to state 37
    ]               reduce using rule 20 (array_content -> object .)


state 34

    (21) array_content -> empty .

    ]               reduce using rule 21 (array_content -> empty .)


state 35

    (22) comparison -> number COMPARATOR number .

    ,               reduce using rule 22 (comparison -> number COMPARATOR number .)
    }               reduce using rule 22 (comparison -> number COMPARATOR number .)


state 36

    (18) array -> [ array_content ] .

    ,               reduce using rule 18 (array -> [ array_content ] .)
    }               reduce using rule 18 (array -> [ array_content ] .)


state 37

    (19) array_content -> object , . array_content
    (19) array_content -> . object , array_content
    (20) array_content -> . object
    (21) array_content -> . empty
    (3) object -> . { object_content }
    (29) empty -> .

    {               shift and go to state 4
    ]               reduce using rule 29 (empty -> .)

    object                         shift and go to state 33
    array_content                  shift and go to state 38
    empty                          shift and go to state 34

state 38

    (19) array_content -> object , array_content .

    ]               reduce using rule 19 (array_content -> object , array_content .)

