Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> file
Rule 1     file -> non_empty_file
Rule 2     non_empty_file -> object
Rule 3     non_empty_file -> object SEPARATOR_INSTANCES non_empty_file
Rule 4     object -> BLOCK_START object_content BLOCK_END
Rule 5     object_content -> non_empty_object_content
Rule 6     object_content -> empty
Rule 7     non_empty_object_content -> object_instance
Rule 8     non_empty_object_content -> object_instance SEPARATOR_INSTANCES non_empty_object_content
Rule 9     object_instance -> key SEPARATOR_FIELDS value
Rule 10    key -> STRING_EXPLICIT
Rule 11    key -> STRING_IMPLICIT
Rule 12    value -> array_object
Rule 13    value -> comparison
Rule 14    value -> object
Rule 15    value -> number
Rule 16    value -> bool
Rule 17    value -> NULL
Rule 18    value -> STRING_EXPLICIT
Rule 19    array_object -> ARRAY_START array_content ARRAY_END
Rule 20    array_content -> non_empty_array_content
Rule 21    array_content -> empty
Rule 22    non_empty_array_content -> object
Rule 23    non_empty_array_content -> object SEPARATOR_INSTANCES non_empty_array_content
Rule 24    comparison -> number COMPARATOR number
Rule 25    number -> SCIENTIFIC
Rule 26    number -> REAL
Rule 27    number -> HEXADECIMAL
Rule 28    number -> OCTAL
Rule 29    number -> BINARY
Rule 30    number -> INTEGER
Rule 31    bool -> TR
Rule 32    bool -> FL
Rule 33    empty -> <empty>

Terminals, with rules where they appear

ARRAY_END            : 19
ARRAY_START          : 19
BINARY               : 29
BLOCK_END            : 4
BLOCK_START          : 4
COMPARATOR           : 24
FL                   : 32
HEXADECIMAL          : 27
INTEGER              : 30
NULL                 : 17
OCTAL                : 28
REAL                 : 26
SCIENTIFIC           : 25
SEPARATOR_FIELDS     : 9
SEPARATOR_INSTANCES  : 3 8 23
STRING_EXPLICIT      : 10 18
STRING_IMPLICIT      : 11
TR                   : 31
error                : 

Nonterminals, with rules where they appear

array_content        : 19
array_object         : 12
bool                 : 16
comparison           : 13
empty                : 6 21
file                 : 0
key                  : 9
non_empty_array_content : 20 23
non_empty_file       : 1 3
non_empty_object_content : 5 8
number               : 15 24 24
object               : 2 3 14 22 23
object_content       : 4
object_instance      : 7 8
value                : 9

Parsing method: LALR

state 0

    (0) S' -> . file
    (1) file -> . non_empty_file
    (2) non_empty_file -> . object
    (3) non_empty_file -> . object SEPARATOR_INSTANCES non_empty_file
    (4) object -> . BLOCK_START object_content BLOCK_END

    BLOCK_START     shift and go to state 4

    file                           shift and go to state 1
    non_empty_file                 shift and go to state 2
    object                         shift and go to state 3

state 1

    (0) S' -> file .



state 2

    (1) file -> non_empty_file .

    $end            reduce using rule 1 (file -> non_empty_file .)


state 3

    (2) non_empty_file -> object .
    (3) non_empty_file -> object . SEPARATOR_INSTANCES non_empty_file

    $end            reduce using rule 2 (non_empty_file -> object .)
    SEPARATOR_INSTANCES shift and go to state 5


state 4

    (4) object -> BLOCK_START . object_content BLOCK_END
    (5) object_content -> . non_empty_object_content
    (6) object_content -> . empty
    (7) non_empty_object_content -> . object_instance
    (8) non_empty_object_content -> . object_instance SEPARATOR_INSTANCES non_empty_object_content
    (33) empty -> .
    (9) object_instance -> . key SEPARATOR_FIELDS value
    (10) key -> . STRING_EXPLICIT
    (11) key -> . STRING_IMPLICIT

    BLOCK_END       reduce using rule 33 (empty -> .)
    STRING_EXPLICIT shift and go to state 11
    STRING_IMPLICIT shift and go to state 12

    object_content                 shift and go to state 6
    non_empty_object_content       shift and go to state 7
    empty                          shift and go to state 8
    object_instance                shift and go to state 9
    key                            shift and go to state 10

state 5

    (3) non_empty_file -> object SEPARATOR_INSTANCES . non_empty_file
    (2) non_empty_file -> . object
    (3) non_empty_file -> . object SEPARATOR_INSTANCES non_empty_file
    (4) object -> . BLOCK_START object_content BLOCK_END

    BLOCK_START     shift and go to state 4

    object                         shift and go to state 3
    non_empty_file                 shift and go to state 13

state 6

    (4) object -> BLOCK_START object_content . BLOCK_END

    BLOCK_END       shift and go to state 14


state 7

    (5) object_content -> non_empty_object_content .

    BLOCK_END       reduce using rule 5 (object_content -> non_empty_object_content .)


state 8

    (6) object_content -> empty .

    BLOCK_END       reduce using rule 6 (object_content -> empty .)


state 9

    (7) non_empty_object_content -> object_instance .
    (8) non_empty_object_content -> object_instance . SEPARATOR_INSTANCES non_empty_object_content

    BLOCK_END       reduce using rule 7 (non_empty_object_content -> object_instance .)
    SEPARATOR_INSTANCES shift and go to state 15


state 10

    (9) object_instance -> key . SEPARATOR_FIELDS value

    SEPARATOR_FIELDS shift and go to state 16


state 11

    (10) key -> STRING_EXPLICIT .

    SEPARATOR_FIELDS reduce using rule 10 (key -> STRING_EXPLICIT .)


state 12

    (11) key -> STRING_IMPLICIT .

    SEPARATOR_FIELDS reduce using rule 11 (key -> STRING_IMPLICIT .)


state 13

    (3) non_empty_file -> object SEPARATOR_INSTANCES non_empty_file .

    $end            reduce using rule 3 (non_empty_file -> object SEPARATOR_INSTANCES non_empty_file .)


state 14

    (4) object -> BLOCK_START object_content BLOCK_END .

    SEPARATOR_INSTANCES reduce using rule 4 (object -> BLOCK_START object_content BLOCK_END .)
    $end            reduce using rule 4 (object -> BLOCK_START object_content BLOCK_END .)
    BLOCK_END       reduce using rule 4 (object -> BLOCK_START object_content BLOCK_END .)
    ARRAY_END       reduce using rule 4 (object -> BLOCK_START object_content BLOCK_END .)


state 15

    (8) non_empty_object_content -> object_instance SEPARATOR_INSTANCES . non_empty_object_content
    (7) non_empty_object_content -> . object_instance
    (8) non_empty_object_content -> . object_instance SEPARATOR_INSTANCES non_empty_object_content
    (9) object_instance -> . key SEPARATOR_FIELDS value
    (10) key -> . STRING_EXPLICIT
    (11) key -> . STRING_IMPLICIT

    STRING_EXPLICIT shift and go to state 11
    STRING_IMPLICIT shift and go to state 12

    object_instance                shift and go to state 9
    non_empty_object_content       shift and go to state 17
    key                            shift and go to state 10

state 16

    (9) object_instance -> key SEPARATOR_FIELDS . value
    (12) value -> . array_object
    (13) value -> . comparison
    (14) value -> . object
    (15) value -> . number
    (16) value -> . bool
    (17) value -> . NULL
    (18) value -> . STRING_EXPLICIT
    (19) array_object -> . ARRAY_START array_content ARRAY_END
    (24) comparison -> . number COMPARATOR number
    (4) object -> . BLOCK_START object_content BLOCK_END
    (25) number -> . SCIENTIFIC
    (26) number -> . REAL
    (27) number -> . HEXADECIMAL
    (28) number -> . OCTAL
    (29) number -> . BINARY
    (30) number -> . INTEGER
    (31) bool -> . TR
    (32) bool -> . FL

    NULL            shift and go to state 24
    STRING_EXPLICIT shift and go to state 25
    ARRAY_START     shift and go to state 26
    BLOCK_START     shift and go to state 4
    SCIENTIFIC      shift and go to state 27
    REAL            shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARY          shift and go to state 31
    INTEGER         shift and go to state 32
    TR              shift and go to state 33
    FL              shift and go to state 34

    value                          shift and go to state 18
    array_object                   shift and go to state 19
    comparison                     shift and go to state 20
    object                         shift and go to state 21
    number                         shift and go to state 22
    bool                           shift and go to state 23

state 17

    (8) non_empty_object_content -> object_instance SEPARATOR_INSTANCES non_empty_object_content .

    BLOCK_END       reduce using rule 8 (non_empty_object_content -> object_instance SEPARATOR_INSTANCES non_empty_object_content .)


state 18

    (9) object_instance -> key SEPARATOR_FIELDS value .

    SEPARATOR_INSTANCES reduce using rule 9 (object_instance -> key SEPARATOR_FIELDS value .)
    BLOCK_END       reduce using rule 9 (object_instance -> key SEPARATOR_FIELDS value .)


state 19

    (12) value -> array_object .

    SEPARATOR_INSTANCES reduce using rule 12 (value -> array_object .)
    BLOCK_END       reduce using rule 12 (value -> array_object .)


state 20

    (13) value -> comparison .

    SEPARATOR_INSTANCES reduce using rule 13 (value -> comparison .)
    BLOCK_END       reduce using rule 13 (value -> comparison .)


state 21

    (14) value -> object .

    SEPARATOR_INSTANCES reduce using rule 14 (value -> object .)
    BLOCK_END       reduce using rule 14 (value -> object .)


state 22

    (15) value -> number .
    (24) comparison -> number . COMPARATOR number

    SEPARATOR_INSTANCES reduce using rule 15 (value -> number .)
    BLOCK_END       reduce using rule 15 (value -> number .)
    COMPARATOR      shift and go to state 35


state 23

    (16) value -> bool .

    SEPARATOR_INSTANCES reduce using rule 16 (value -> bool .)
    BLOCK_END       reduce using rule 16 (value -> bool .)


state 24

    (17) value -> NULL .

    SEPARATOR_INSTANCES reduce using rule 17 (value -> NULL .)
    BLOCK_END       reduce using rule 17 (value -> NULL .)


state 25

    (18) value -> STRING_EXPLICIT .

    SEPARATOR_INSTANCES reduce using rule 18 (value -> STRING_EXPLICIT .)
    BLOCK_END       reduce using rule 18 (value -> STRING_EXPLICIT .)


state 26

    (19) array_object -> ARRAY_START . array_content ARRAY_END
    (20) array_content -> . non_empty_array_content
    (21) array_content -> . empty
    (22) non_empty_array_content -> . object
    (23) non_empty_array_content -> . object SEPARATOR_INSTANCES non_empty_array_content
    (33) empty -> .
    (4) object -> . BLOCK_START object_content BLOCK_END

    ARRAY_END       reduce using rule 33 (empty -> .)
    BLOCK_START     shift and go to state 4

    array_content                  shift and go to state 36
    non_empty_array_content        shift and go to state 37
    empty                          shift and go to state 38
    object                         shift and go to state 39

state 27

    (25) number -> SCIENTIFIC .

    COMPARATOR      reduce using rule 25 (number -> SCIENTIFIC .)
    SEPARATOR_INSTANCES reduce using rule 25 (number -> SCIENTIFIC .)
    BLOCK_END       reduce using rule 25 (number -> SCIENTIFIC .)


state 28

    (26) number -> REAL .

    COMPARATOR      reduce using rule 26 (number -> REAL .)
    SEPARATOR_INSTANCES reduce using rule 26 (number -> REAL .)
    BLOCK_END       reduce using rule 26 (number -> REAL .)


state 29

    (27) number -> HEXADECIMAL .

    COMPARATOR      reduce using rule 27 (number -> HEXADECIMAL .)
    SEPARATOR_INSTANCES reduce using rule 27 (number -> HEXADECIMAL .)
    BLOCK_END       reduce using rule 27 (number -> HEXADECIMAL .)


state 30

    (28) number -> OCTAL .

    COMPARATOR      reduce using rule 28 (number -> OCTAL .)
    SEPARATOR_INSTANCES reduce using rule 28 (number -> OCTAL .)
    BLOCK_END       reduce using rule 28 (number -> OCTAL .)


state 31

    (29) number -> BINARY .

    COMPARATOR      reduce using rule 29 (number -> BINARY .)
    SEPARATOR_INSTANCES reduce using rule 29 (number -> BINARY .)
    BLOCK_END       reduce using rule 29 (number -> BINARY .)


state 32

    (30) number -> INTEGER .

    COMPARATOR      reduce using rule 30 (number -> INTEGER .)
    SEPARATOR_INSTANCES reduce using rule 30 (number -> INTEGER .)
    BLOCK_END       reduce using rule 30 (number -> INTEGER .)


state 33

    (31) bool -> TR .

    SEPARATOR_INSTANCES reduce using rule 31 (bool -> TR .)
    BLOCK_END       reduce using rule 31 (bool -> TR .)


state 34

    (32) bool -> FL .

    SEPARATOR_INSTANCES reduce using rule 32 (bool -> FL .)
    BLOCK_END       reduce using rule 32 (bool -> FL .)


state 35

    (24) comparison -> number COMPARATOR . number
    (25) number -> . SCIENTIFIC
    (26) number -> . REAL
    (27) number -> . HEXADECIMAL
    (28) number -> . OCTAL
    (29) number -> . BINARY
    (30) number -> . INTEGER

    SCIENTIFIC      shift and go to state 27
    REAL            shift and go to state 28
    HEXADECIMAL     shift and go to state 29
    OCTAL           shift and go to state 30
    BINARY          shift and go to state 31
    INTEGER         shift and go to state 32

    number                         shift and go to state 40

state 36

    (19) array_object -> ARRAY_START array_content . ARRAY_END

    ARRAY_END       shift and go to state 41


state 37

    (20) array_content -> non_empty_array_content .

    ARRAY_END       reduce using rule 20 (array_content -> non_empty_array_content .)


state 38

    (21) array_content -> empty .

    ARRAY_END       reduce using rule 21 (array_content -> empty .)


state 39

    (22) non_empty_array_content -> object .
    (23) non_empty_array_content -> object . SEPARATOR_INSTANCES non_empty_array_content

    ARRAY_END       reduce using rule 22 (non_empty_array_content -> object .)
    SEPARATOR_INSTANCES shift and go to state 42


state 40

    (24) comparison -> number COMPARATOR number .

    SEPARATOR_INSTANCES reduce using rule 24 (comparison -> number COMPARATOR number .)
    BLOCK_END       reduce using rule 24 (comparison -> number COMPARATOR number .)


state 41

    (19) array_object -> ARRAY_START array_content ARRAY_END .

    SEPARATOR_INSTANCES reduce using rule 19 (array_object -> ARRAY_START array_content ARRAY_END .)
    BLOCK_END       reduce using rule 19 (array_object -> ARRAY_START array_content ARRAY_END .)


state 42

    (23) non_empty_array_content -> object SEPARATOR_INSTANCES . non_empty_array_content
    (22) non_empty_array_content -> . object
    (23) non_empty_array_content -> . object SEPARATOR_INSTANCES non_empty_array_content
    (4) object -> . BLOCK_START object_content BLOCK_END

    BLOCK_START     shift and go to state 4

    object                         shift and go to state 39
    non_empty_array_content        shift and go to state 43

state 43

    (23) non_empty_array_content -> object SEPARATOR_INSTANCES non_empty_array_content .

    ARRAY_END       reduce using rule 23 (non_empty_array_content -> object SEPARATOR_INSTANCES non_empty_array_content .)

