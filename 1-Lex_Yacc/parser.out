Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> file
Rule 1     file -> object
Rule 2     file -> empty
Rule 3     object -> BLOCK_START object_content BLOCK_END
Rule 4     object_content -> non_empty_object_content
Rule 5     object_content -> empty
Rule 6     non_empty_object_content -> object_instance
Rule 7     non_empty_object_content -> object_instance SEPARATOR_INSTANCES non_empty_object_content
Rule 8     object_instance -> key SEPARATOR_FIELDS value
Rule 9     key -> STRING_EXPLICIT
Rule 10    key -> STRING_IMPLICIT
Rule 11    value -> array_object
Rule 12    value -> comparison
Rule 13    value -> object
Rule 14    value -> number
Rule 15    value -> TR
Rule 16    value -> FL
Rule 17    value -> NULL
Rule 18    value -> STRING_EXPLICIT
Rule 19    array_object -> ARRAY_START array_content ARRAY_END
Rule 20    array_content -> non_empty_array_content
Rule 21    array_content -> empty
Rule 22    non_empty_array_content -> object
Rule 23    non_empty_array_content -> object SEPARATOR_INSTANCES non_empty_array_content
Rule 24    comparison -> number COMPARATOR number
Rule 25    number -> SCIENTIFIC
Rule 26    number -> REAL
Rule 27    number -> HEXADECIMAL
Rule 28    number -> OCTAL
Rule 29    number -> BINARY
Rule 30    number -> INTEGER
Rule 31    empty -> <empty>

Terminals, with rules where they appear

ARRAY_END            : 19
ARRAY_START          : 19
BINARY               : 29
BLOCK_END            : 3
BLOCK_START          : 3
COMPARATOR           : 24
FL                   : 16
HEXADECIMAL          : 27
INTEGER              : 30
NULL                 : 17
OCTAL                : 28
REAL                 : 26
SCIENTIFIC           : 25
SEPARATOR_FIELDS     : 8
SEPARATOR_INSTANCES  : 7 23
STRING_EXPLICIT      : 9 18
STRING_IMPLICIT      : 10
TR                   : 15
error                : 

Nonterminals, with rules where they appear

array_content        : 19
array_object         : 11
comparison           : 12
empty                : 2 5 21
file                 : 0
key                  : 8
non_empty_array_content : 20 23
non_empty_object_content : 4 7
number               : 14 24 24
object               : 1 13 22 23
object_content       : 3
object_instance      : 6 7
value                : 8

Parsing method: LALR

state 0

    (0) S' -> . file
    (1) file -> . object
    (2) file -> . empty
    (3) object -> . BLOCK_START object_content BLOCK_END
    (31) empty -> .

    BLOCK_START     shift and go to state 4
    $end            reduce using rule 31 (empty -> .)

    file                           shift and go to state 1
    object                         shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> file .



state 2

    (1) file -> object .

    $end            reduce using rule 1 (file -> object .)


state 3

    (2) file -> empty .

    $end            reduce using rule 2 (file -> empty .)


state 4

    (3) object -> BLOCK_START . object_content BLOCK_END
    (4) object_content -> . non_empty_object_content
    (5) object_content -> . empty
    (6) non_empty_object_content -> . object_instance
    (7) non_empty_object_content -> . object_instance SEPARATOR_INSTANCES non_empty_object_content
    (31) empty -> .
    (8) object_instance -> . key SEPARATOR_FIELDS value
    (9) key -> . STRING_EXPLICIT
    (10) key -> . STRING_IMPLICIT

    BLOCK_END       reduce using rule 31 (empty -> .)
    STRING_EXPLICIT shift and go to state 10
    STRING_IMPLICIT shift and go to state 11

    object_content                 shift and go to state 5
    non_empty_object_content       shift and go to state 6
    empty                          shift and go to state 7
    object_instance                shift and go to state 8
    key                            shift and go to state 9

state 5

    (3) object -> BLOCK_START object_content . BLOCK_END

    BLOCK_END       shift and go to state 12


state 6

    (4) object_content -> non_empty_object_content .

    BLOCK_END       reduce using rule 4 (object_content -> non_empty_object_content .)


state 7

    (5) object_content -> empty .

    BLOCK_END       reduce using rule 5 (object_content -> empty .)


state 8

    (6) non_empty_object_content -> object_instance .
    (7) non_empty_object_content -> object_instance . SEPARATOR_INSTANCES non_empty_object_content

    BLOCK_END       reduce using rule 6 (non_empty_object_content -> object_instance .)
    SEPARATOR_INSTANCES shift and go to state 13


state 9

    (8) object_instance -> key . SEPARATOR_FIELDS value

    SEPARATOR_FIELDS shift and go to state 14


state 10

    (9) key -> STRING_EXPLICIT .

    SEPARATOR_FIELDS reduce using rule 9 (key -> STRING_EXPLICIT .)


state 11

    (10) key -> STRING_IMPLICIT .

    SEPARATOR_FIELDS reduce using rule 10 (key -> STRING_IMPLICIT .)


state 12

    (3) object -> BLOCK_START object_content BLOCK_END .

    $end            reduce using rule 3 (object -> BLOCK_START object_content BLOCK_END .)
    SEPARATOR_INSTANCES reduce using rule 3 (object -> BLOCK_START object_content BLOCK_END .)
    BLOCK_END       reduce using rule 3 (object -> BLOCK_START object_content BLOCK_END .)
    ARRAY_END       reduce using rule 3 (object -> BLOCK_START object_content BLOCK_END .)


state 13

    (7) non_empty_object_content -> object_instance SEPARATOR_INSTANCES . non_empty_object_content
    (6) non_empty_object_content -> . object_instance
    (7) non_empty_object_content -> . object_instance SEPARATOR_INSTANCES non_empty_object_content
    (8) object_instance -> . key SEPARATOR_FIELDS value
    (9) key -> . STRING_EXPLICIT
    (10) key -> . STRING_IMPLICIT

    STRING_EXPLICIT shift and go to state 10
    STRING_IMPLICIT shift and go to state 11

    object_instance                shift and go to state 8
    non_empty_object_content       shift and go to state 15
    key                            shift and go to state 9

state 14

    (8) object_instance -> key SEPARATOR_FIELDS . value
    (11) value -> . array_object
    (12) value -> . comparison
    (13) value -> . object
    (14) value -> . number
    (15) value -> . TR
    (16) value -> . FL
    (17) value -> . NULL
    (18) value -> . STRING_EXPLICIT
    (19) array_object -> . ARRAY_START array_content ARRAY_END
    (24) comparison -> . number COMPARATOR number
    (3) object -> . BLOCK_START object_content BLOCK_END
    (25) number -> . SCIENTIFIC
    (26) number -> . REAL
    (27) number -> . HEXADECIMAL
    (28) number -> . OCTAL
    (29) number -> . BINARY
    (30) number -> . INTEGER

    TR              shift and go to state 21
    FL              shift and go to state 22
    NULL            shift and go to state 23
    STRING_EXPLICIT shift and go to state 24
    ARRAY_START     shift and go to state 25
    BLOCK_START     shift and go to state 4
    SCIENTIFIC      shift and go to state 26
    REAL            shift and go to state 27
    HEXADECIMAL     shift and go to state 28
    OCTAL           shift and go to state 29
    BINARY          shift and go to state 30
    INTEGER         shift and go to state 31

    value                          shift and go to state 16
    array_object                   shift and go to state 17
    comparison                     shift and go to state 18
    object                         shift and go to state 19
    number                         shift and go to state 20

state 15

    (7) non_empty_object_content -> object_instance SEPARATOR_INSTANCES non_empty_object_content .

    BLOCK_END       reduce using rule 7 (non_empty_object_content -> object_instance SEPARATOR_INSTANCES non_empty_object_content .)


state 16

    (8) object_instance -> key SEPARATOR_FIELDS value .

    SEPARATOR_INSTANCES reduce using rule 8 (object_instance -> key SEPARATOR_FIELDS value .)
    BLOCK_END       reduce using rule 8 (object_instance -> key SEPARATOR_FIELDS value .)


state 17

    (11) value -> array_object .

    SEPARATOR_INSTANCES reduce using rule 11 (value -> array_object .)
    BLOCK_END       reduce using rule 11 (value -> array_object .)


state 18

    (12) value -> comparison .

    SEPARATOR_INSTANCES reduce using rule 12 (value -> comparison .)
    BLOCK_END       reduce using rule 12 (value -> comparison .)


state 19

    (13) value -> object .

    SEPARATOR_INSTANCES reduce using rule 13 (value -> object .)
    BLOCK_END       reduce using rule 13 (value -> object .)


state 20

    (14) value -> number .
    (24) comparison -> number . COMPARATOR number

    SEPARATOR_INSTANCES reduce using rule 14 (value -> number .)
    BLOCK_END       reduce using rule 14 (value -> number .)
    COMPARATOR      shift and go to state 32


state 21

    (15) value -> TR .

    SEPARATOR_INSTANCES reduce using rule 15 (value -> TR .)
    BLOCK_END       reduce using rule 15 (value -> TR .)


state 22

    (16) value -> FL .

    SEPARATOR_INSTANCES reduce using rule 16 (value -> FL .)
    BLOCK_END       reduce using rule 16 (value -> FL .)


state 23

    (17) value -> NULL .

    SEPARATOR_INSTANCES reduce using rule 17 (value -> NULL .)
    BLOCK_END       reduce using rule 17 (value -> NULL .)


state 24

    (18) value -> STRING_EXPLICIT .

    SEPARATOR_INSTANCES reduce using rule 18 (value -> STRING_EXPLICIT .)
    BLOCK_END       reduce using rule 18 (value -> STRING_EXPLICIT .)


state 25

    (19) array_object -> ARRAY_START . array_content ARRAY_END
    (20) array_content -> . non_empty_array_content
    (21) array_content -> . empty
    (22) non_empty_array_content -> . object
    (23) non_empty_array_content -> . object SEPARATOR_INSTANCES non_empty_array_content
    (31) empty -> .
    (3) object -> . BLOCK_START object_content BLOCK_END

    ARRAY_END       reduce using rule 31 (empty -> .)
    BLOCK_START     shift and go to state 4

    array_content                  shift and go to state 33
    non_empty_array_content        shift and go to state 34
    empty                          shift and go to state 35
    object                         shift and go to state 36

state 26

    (25) number -> SCIENTIFIC .

    COMPARATOR      reduce using rule 25 (number -> SCIENTIFIC .)
    SEPARATOR_INSTANCES reduce using rule 25 (number -> SCIENTIFIC .)
    BLOCK_END       reduce using rule 25 (number -> SCIENTIFIC .)


state 27

    (26) number -> REAL .

    COMPARATOR      reduce using rule 26 (number -> REAL .)
    SEPARATOR_INSTANCES reduce using rule 26 (number -> REAL .)
    BLOCK_END       reduce using rule 26 (number -> REAL .)


state 28

    (27) number -> HEXADECIMAL .

    COMPARATOR      reduce using rule 27 (number -> HEXADECIMAL .)
    SEPARATOR_INSTANCES reduce using rule 27 (number -> HEXADECIMAL .)
    BLOCK_END       reduce using rule 27 (number -> HEXADECIMAL .)


state 29

    (28) number -> OCTAL .

    COMPARATOR      reduce using rule 28 (number -> OCTAL .)
    SEPARATOR_INSTANCES reduce using rule 28 (number -> OCTAL .)
    BLOCK_END       reduce using rule 28 (number -> OCTAL .)


state 30

    (29) number -> BINARY .

    COMPARATOR      reduce using rule 29 (number -> BINARY .)
    SEPARATOR_INSTANCES reduce using rule 29 (number -> BINARY .)
    BLOCK_END       reduce using rule 29 (number -> BINARY .)


state 31

    (30) number -> INTEGER .

    COMPARATOR      reduce using rule 30 (number -> INTEGER .)
    SEPARATOR_INSTANCES reduce using rule 30 (number -> INTEGER .)
    BLOCK_END       reduce using rule 30 (number -> INTEGER .)


state 32

    (24) comparison -> number COMPARATOR . number
    (25) number -> . SCIENTIFIC
    (26) number -> . REAL
    (27) number -> . HEXADECIMAL
    (28) number -> . OCTAL
    (29) number -> . BINARY
    (30) number -> . INTEGER

    SCIENTIFIC      shift and go to state 26
    REAL            shift and go to state 27
    HEXADECIMAL     shift and go to state 28
    OCTAL           shift and go to state 29
    BINARY          shift and go to state 30
    INTEGER         shift and go to state 31

    number                         shift and go to state 37

state 33

    (19) array_object -> ARRAY_START array_content . ARRAY_END

    ARRAY_END       shift and go to state 38


state 34

    (20) array_content -> non_empty_array_content .

    ARRAY_END       reduce using rule 20 (array_content -> non_empty_array_content .)


state 35

    (21) array_content -> empty .

    ARRAY_END       reduce using rule 21 (array_content -> empty .)


state 36

    (22) non_empty_array_content -> object .
    (23) non_empty_array_content -> object . SEPARATOR_INSTANCES non_empty_array_content

    ARRAY_END       reduce using rule 22 (non_empty_array_content -> object .)
    SEPARATOR_INSTANCES shift and go to state 39


state 37

    (24) comparison -> number COMPARATOR number .

    SEPARATOR_INSTANCES reduce using rule 24 (comparison -> number COMPARATOR number .)
    BLOCK_END       reduce using rule 24 (comparison -> number COMPARATOR number .)


state 38

    (19) array_object -> ARRAY_START array_content ARRAY_END .

    SEPARATOR_INSTANCES reduce using rule 19 (array_object -> ARRAY_START array_content ARRAY_END .)
    BLOCK_END       reduce using rule 19 (array_object -> ARRAY_START array_content ARRAY_END .)


state 39

    (23) non_empty_array_content -> object SEPARATOR_INSTANCES . non_empty_array_content
    (22) non_empty_array_content -> . object
    (23) non_empty_array_content -> . object SEPARATOR_INSTANCES non_empty_array_content
    (3) object -> . BLOCK_START object_content BLOCK_END

    BLOCK_START     shift and go to state 4

    object                         shift and go to state 36
    non_empty_array_content        shift and go to state 40

state 40

    (23) non_empty_array_content -> object SEPARATOR_INSTANCES non_empty_array_content .

    ARRAY_END       reduce using rule 23 (non_empty_array_content -> object SEPARATOR_INSTANCES non_empty_array_content .)

