
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocSTRING_IMPLICITrightASSIGNleftORANDnonassocLELTEQGEGTleftPLUSMINUSleftTIMESDIVIDErightUPLUSUMINUSNOTAND ASSIGN BOOLEAN CHAR CHARACTER DIVIDE ELSE EQ FL FLOAT FUNCTION GE GT IF INT INTEGER LE LET LT MINUS NOT NULL OR PLUS REAL RETURN STRING_EXPLICIT STRING_IMPLICIT TIMES TR TYPE WHILE\n        file : statement file\n            | block file\n            | empty\n        \n        statement : declaration ';'\n            | assignment ';'\n            | definition ';'\n            | expression ';'\n        \n        block : simple_block\n            | function\n        \n        simple_block : if_conditional\n            | while_loop\n        \n        block_body : statement block_body\n            | simple_block block_body\n            | statement\n            | simple_block\n        \n        declaration : LET declaration_content\n        \n        declaration_content : item ',' declaration_content\n            | item\n        \n        item : STRING_IMPLICIT ':' STRING_IMPLICIT\n            | STRING_IMPLICIT\n        \n        assignment : declaration ASSIGN expression\n            | STRING_IMPLICIT ASSIGN expression\n        \n        definition : TYPE STRING_IMPLICIT ASSIGN object\n        \n        object : '{' object_content '}'\n        \n        object_content : object_item ',' object_content\n            | object_item\n            | empty\n        \n        object_item : key ':' basic_type\n            | key ':' expression\n        \n        key : STRING_EXPLICIT\n            | STRING_IMPLICIT\n        \n        type : basic_type\n            | STRING_IMPLICIT\n        \n        basic_type : INT\n            | FLOAT\n            | CHARACTER\n            | BOOLEAN\n        \n        if_conditional : IF '(' expression ')' '{' block_body '}'\n            | IF '(' expression ')' '{' block_body '}' ELSE '{' block_body '}'\n        \n        while_loop : WHILE '(' expression ')' '{' block_body '}'\n        \n        function : FUNCTION STRING_IMPLICIT '(' argument_list ')' ':' type '{' block_body RETURN expression ';' '}'\n        \n        argument_list : argument_list_nonempty\n            | empty\n        \n        argument_list_nonempty : STRING_IMPLICIT ':' type ',' argument_list_nonempty\n            | STRING_IMPLICIT ':' type\n        \n        expression : '(' expression ')'\n            | expression PLUS expression\n            | expression MINUS expression\n            | expression TIMES expression\n            | expression DIVIDE expression\n            | expression AND expression\n            | expression OR expression\n            | expression LT expression\n            | expression LE expression\n            | expression EQ expression\n            | expression GE expression\n            | expression GT expression\n            | PLUS expression %prec UPLUS\n            | MINUS expression %prec UMINUS\n            | NOT expression\n            | INTEGER\n            | REAL\n            | CHAR\n            | TR\n            | FL\n            | NULL\n            | STRING_IMPLICIT\n            | function_call\n            | object_call\n            | object\n        \n        function_call : STRING_IMPLICIT '(' function_call_list ')'\n        \n        function_call_list : function_call_list_nonempty\n            | empty\n        \n        function_call_list_nonempty : expression ',' function_call_list_nonempty\n            | expression\n        \n        object_call : STRING_IMPLICIT object_attribute_list\n        \n        object_attribute_list : '[' STRING_EXPLICIT ']' object_attribute_list\n            | '.' STRING_IMPLICIT object_attribute_list\n            | '[' STRING_EXPLICIT ']'\n            | '.' STRING_IMPLICIT\n        \n        empty :\n        "
    
_lr_action_items = {'$end':([0,1,2,3,4,9,10,27,28,33,34,35,37,38,39,139,142,151,153,],[-81,0,-81,-81,-3,-8,-9,-10,-11,-1,-2,-4,-5,-6,-7,-38,-40,-39,-41,]),'LET':([0,2,3,9,10,27,28,35,37,38,39,127,128,134,135,139,142,144,147,151,153,],[11,11,11,-8,-9,-10,-11,-4,-5,-6,-7,11,11,11,11,-38,-40,11,11,-39,-41,]),'STRING_IMPLICIT':([0,2,3,9,10,11,13,15,16,17,18,27,28,29,30,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,58,72,73,86,87,97,99,100,106,125,127,128,132,134,135,137,139,142,144,147,148,151,153,],[12,12,12,-8,-9,53,59,61,61,61,61,-10,-11,65,71,-4,61,-5,-6,-7,61,61,61,61,61,61,61,61,61,61,61,61,61,94,61,61,53,104,110,71,61,61,129,12,12,129,12,12,110,-38,-40,12,12,61,-39,-41,]),'TYPE':([0,2,3,9,10,27,28,35,37,38,39,127,128,134,135,139,142,144,147,151,153,],[13,13,13,-8,-9,-10,-11,-4,-5,-6,-7,13,13,13,13,-38,-40,13,13,-39,-41,]),'(':([0,2,3,9,10,12,15,16,17,18,27,28,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,61,65,72,73,100,106,127,128,134,135,139,142,144,147,148,151,153,],[15,15,15,-8,-9,55,15,15,15,15,-10,-11,72,73,-4,15,-5,-6,-7,15,15,15,15,15,15,15,15,15,15,15,15,15,55,97,15,15,15,15,15,15,15,15,-38,-40,15,15,15,-39,-41,]),'PLUS':([0,2,3,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,60,61,62,63,64,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,100,101,102,105,106,107,108,116,124,127,128,134,135,139,142,144,147,148,150,151,153,],[16,16,16,40,-8,-9,-67,-70,16,16,16,16,-61,-62,-63,-64,-65,-66,-68,-69,-10,-11,-4,16,-5,-6,-7,16,16,16,16,16,16,16,16,16,16,16,16,16,-76,40,-67,-58,-59,-60,16,16,40,-47,-48,-49,-50,40,40,40,40,40,40,40,40,40,-80,-46,-24,16,40,40,-71,16,-79,-78,40,-77,16,16,16,16,-38,-40,16,16,16,40,-39,-41,]),'MINUS':([0,2,3,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,56,60,61,62,63,64,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,100,101,102,105,106,107,108,116,124,127,128,134,135,139,142,144,147,148,150,151,153,],[17,17,17,41,-8,-9,-67,-70,17,17,17,17,-61,-62,-63,-64,-65,-66,-68,-69,-10,-11,-4,17,-5,-6,-7,17,17,17,17,17,17,17,17,17,17,17,17,17,-76,41,-67,-58,-59,-60,17,17,41,-47,-48,-49,-50,41,41,41,41,41,41,41,41,41,-80,-46,-24,17,41,41,-71,17,-79,-78,41,-77,17,17,17,17,-38,-40,17,17,17,41,-39,-41,]),'NOT':([0,2,3,9,10,15,16,17,18,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,139,142,144,147,148,151,153,],[18,18,18,-8,-9,18,18,18,18,-10,-11,-4,18,-5,-6,-7,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-38,-40,18,18,18,-39,-41,]),'INTEGER':([0,2,3,9,10,15,16,17,18,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,139,142,144,147,148,151,153,],[19,19,19,-8,-9,19,19,19,19,-10,-11,-4,19,-5,-6,-7,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-38,-40,19,19,19,-39,-41,]),'REAL':([0,2,3,9,10,15,16,17,18,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,139,142,144,147,148,151,153,],[20,20,20,-8,-9,20,20,20,20,-10,-11,-4,20,-5,-6,-7,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-38,-40,20,20,20,-39,-41,]),'CHAR':([0,2,3,9,10,15,16,17,18,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,139,142,144,147,148,151,153,],[21,21,21,-8,-9,21,21,21,21,-10,-11,-4,21,-5,-6,-7,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-38,-40,21,21,21,-39,-41,]),'TR':([0,2,3,9,10,15,16,17,18,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,139,142,144,147,148,151,153,],[22,22,22,-8,-9,22,22,22,22,-10,-11,-4,22,-5,-6,-7,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-38,-40,22,22,22,-39,-41,]),'FL':([0,2,3,9,10,15,16,17,18,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,139,142,144,147,148,151,153,],[23,23,23,-8,-9,23,23,23,23,-10,-11,-4,23,-5,-6,-7,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-38,-40,23,23,23,-39,-41,]),'NULL':([0,2,3,9,10,15,16,17,18,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,139,142,144,147,148,151,153,],[24,24,24,-8,-9,24,24,24,24,-10,-11,-4,24,-5,-6,-7,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-38,-40,24,24,24,-39,-41,]),'FUNCTION':([0,2,3,9,10,27,28,35,37,38,39,139,142,151,153,],[29,29,29,-8,-9,-10,-11,-4,-5,-6,-7,-38,-40,-39,-41,]),'{':([0,2,3,9,10,15,16,17,18,27,28,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,95,100,106,117,118,119,120,121,122,127,128,129,131,134,135,138,139,142,144,145,147,148,151,153,],[30,30,30,-8,-9,30,30,30,30,-10,-11,-4,30,-5,-6,-7,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-34,-35,-36,-37,127,128,30,30,-33,-32,30,30,144,-38,-40,30,147,30,30,-39,-41,]),'IF':([0,2,3,9,10,27,28,35,37,38,39,127,128,134,135,139,142,144,147,151,153,],[31,31,31,-8,-9,-10,-11,-4,-5,-6,-7,31,31,31,31,-38,-40,31,31,-39,-41,]),'WHILE':([0,2,3,9,10,27,28,35,37,38,39,127,128,134,135,139,142,144,147,151,153,],[32,32,32,-8,-9,-10,-11,-4,-5,-6,-7,32,32,32,32,-38,-40,32,32,-39,-41,]),';':([5,6,7,8,12,14,19,20,21,22,23,24,25,26,51,52,53,56,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,94,96,98,103,104,105,107,108,109,124,150,],[35,37,38,39,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-16,-18,-20,-76,-67,-58,-59,-60,-21,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-22,-80,-46,-24,-17,-19,-71,-79,-78,-23,-77,152,]),'ASSIGN':([5,12,51,52,53,59,103,104,],[36,54,-16,-18,-20,95,-17,-19,]),'TIMES':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[42,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,42,-67,-58,-59,-60,42,42,42,-49,-50,42,42,42,42,42,42,42,42,42,-80,-46,-24,42,42,-71,-79,-78,42,-77,42,]),'DIVIDE':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[43,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,43,-67,-58,-59,-60,43,43,43,-49,-50,43,43,43,43,43,43,43,43,43,-80,-46,-24,43,43,-71,-79,-78,43,-77,43,]),'AND':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[44,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,44,-67,-58,-59,-60,44,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,44,44,-80,-46,-24,44,44,-71,-79,-78,44,-77,44,]),'OR':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[45,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,45,-67,-58,-59,-60,45,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,45,45,-80,-46,-24,45,45,-71,-79,-78,45,-77,45,]),'LT':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[46,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,46,-67,-58,-59,-60,46,-47,-48,-49,-50,46,46,None,None,None,None,None,46,46,-80,-46,-24,46,46,-71,-79,-78,46,-77,46,]),'LE':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[47,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,47,-67,-58,-59,-60,47,-47,-48,-49,-50,47,47,None,None,None,None,None,47,47,-80,-46,-24,47,47,-71,-79,-78,47,-77,47,]),'EQ':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[48,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,48,-67,-58,-59,-60,48,-47,-48,-49,-50,48,48,None,None,None,None,None,48,48,-80,-46,-24,48,48,-71,-79,-78,48,-77,48,]),'GE':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[49,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,49,-67,-58,-59,-60,49,-47,-48,-49,-50,49,49,None,None,None,None,None,49,49,-80,-46,-24,49,49,-71,-79,-78,49,-77,49,]),'GT':([8,12,14,19,20,21,22,23,24,25,26,56,60,61,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,94,96,98,101,102,105,107,108,116,124,150,],[50,-67,-70,-61,-62,-63,-64,-65,-66,-68,-69,-76,50,-67,-58,-59,-60,50,-47,-48,-49,-50,50,50,None,None,None,None,None,50,50,-80,-46,-24,50,50,-71,-79,-78,50,-77,50,]),'[':([12,61,94,107,],[57,57,57,57,]),'.':([12,61,94,107,],[58,58,58,58,]),')':([14,19,20,21,22,23,24,25,26,55,56,60,61,62,63,64,75,76,77,78,79,80,81,82,83,84,85,89,90,91,92,94,96,97,98,101,102,105,107,108,111,112,113,117,118,119,120,123,124,129,130,131,143,],[-70,-61,-62,-63,-64,-65,-66,-68,-69,-81,-76,96,-67,-58,-59,-60,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,105,-72,-73,-75,-80,-46,-81,-24,121,122,-71,-79,-78,126,-42,-43,-34,-35,-36,-37,-74,-77,-33,-45,-32,-44,]),',':([14,19,20,21,22,23,24,25,26,52,53,56,61,62,63,64,67,75,76,77,78,79,80,81,82,83,84,85,92,94,96,98,104,105,107,108,115,116,117,118,119,120,124,129,130,131,],[-70,-61,-62,-63,-64,-65,-66,-68,-69,86,-20,-76,-67,-58,-59,-60,99,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,106,-80,-46,-24,-19,-71,-79,-78,-28,-29,-34,-35,-36,-37,-77,-33,137,-32,]),'}':([14,19,20,21,22,23,24,25,26,27,28,30,35,37,38,39,56,61,62,63,64,66,67,68,75,76,77,78,79,80,81,82,83,84,85,94,96,98,99,105,107,108,114,115,116,117,118,119,120,124,133,134,135,136,139,140,141,142,149,151,152,],[-70,-61,-62,-63,-64,-65,-66,-68,-69,-10,-11,-81,-4,-5,-6,-7,-76,-67,-58,-59,-60,98,-26,-27,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-80,-46,-24,-81,-71,-79,-78,-25,-28,-29,-34,-35,-36,-37,-77,139,-14,-15,142,-38,-12,-13,-40,151,-39,153,]),'RETURN':([27,28,35,37,38,39,134,135,139,140,141,142,146,151,],[-10,-11,-4,-5,-6,-7,-14,-15,-38,-12,-13,-40,148,-39,]),'STRING_EXPLICIT':([30,57,99,],[70,93,70,]),':':([53,69,70,71,110,126,],[87,100,-30,-31,125,132,]),']':([93,],[107,]),'INT':([100,125,132,],[117,117,117,]),'FLOAT':([100,125,132,],[118,118,118,]),'CHARACTER':([100,125,132,],[119,119,119,]),'BOOLEAN':([100,125,132,],[120,120,120,]),'ELSE':([139,],[145,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file':([0,2,3,],[1,33,34,]),'statement':([0,2,3,127,128,134,135,144,147,],[2,2,2,134,134,134,134,134,134,]),'block':([0,2,3,],[3,3,3,]),'empty':([0,2,3,30,55,97,99,],[4,4,4,68,91,113,68,]),'declaration':([0,2,3,127,128,134,135,144,147,],[5,5,5,5,5,5,5,5,5,]),'assignment':([0,2,3,127,128,134,135,144,147,],[6,6,6,6,6,6,6,6,6,]),'definition':([0,2,3,127,128,134,135,144,147,],[7,7,7,7,7,7,7,7,7,]),'expression':([0,2,3,15,16,17,18,36,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,144,147,148,],[8,8,8,60,62,63,64,74,75,76,77,78,79,80,81,82,83,84,85,88,92,101,102,116,92,8,8,8,8,8,8,150,]),'simple_block':([0,2,3,127,128,134,135,144,147,],[9,9,9,135,135,135,135,135,135,]),'function':([0,2,3,],[10,10,10,]),'object':([0,2,3,15,16,17,18,36,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,95,100,106,127,128,134,135,144,147,148,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,109,14,14,14,14,14,14,14,14,14,]),'function_call':([0,2,3,15,16,17,18,36,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,144,147,148,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'object_call':([0,2,3,15,16,17,18,36,40,41,42,43,44,45,46,47,48,49,50,54,55,72,73,100,106,127,128,134,135,144,147,148,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_conditional':([0,2,3,127,128,134,135,144,147,],[27,27,27,27,27,27,27,27,27,]),'while_loop':([0,2,3,127,128,134,135,144,147,],[28,28,28,28,28,28,28,28,28,]),'declaration_content':([11,86,],[51,103,]),'item':([11,86,],[52,52,]),'object_attribute_list':([12,61,94,107,],[56,56,108,124,]),'object_content':([30,99,],[66,114,]),'object_item':([30,99,],[67,67,]),'key':([30,99,],[69,69,]),'function_call_list':([55,],[89,]),'function_call_list_nonempty':([55,106,],[90,123,]),'argument_list':([97,],[111,]),'argument_list_nonempty':([97,137,],[112,143,]),'basic_type':([100,125,132,],[115,131,131,]),'type':([125,132,],[130,138,]),'block_body':([127,128,134,135,144,147,],[133,136,140,141,146,149,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> statement file','file',2,'p_file','ajs_parser.py',28),
  ('file -> block file','file',2,'p_file','ajs_parser.py',29),
  ('file -> empty','file',1,'p_file','ajs_parser.py',30),
  ('statement -> declaration ;','statement',2,'p_statement','ajs_parser.py',36),
  ('statement -> assignment ;','statement',2,'p_statement','ajs_parser.py',37),
  ('statement -> definition ;','statement',2,'p_statement','ajs_parser.py',38),
  ('statement -> expression ;','statement',2,'p_statement','ajs_parser.py',39),
  ('block -> simple_block','block',1,'p_block','ajs_parser.py',45),
  ('block -> function','block',1,'p_block','ajs_parser.py',46),
  ('simple_block -> if_conditional','simple_block',1,'p_simple_block','ajs_parser.py',52),
  ('simple_block -> while_loop','simple_block',1,'p_simple_block','ajs_parser.py',53),
  ('block_body -> statement block_body','block_body',2,'p_block_body','ajs_parser.py',59),
  ('block_body -> simple_block block_body','block_body',2,'p_block_body','ajs_parser.py',60),
  ('block_body -> statement','block_body',1,'p_block_body','ajs_parser.py',61),
  ('block_body -> simple_block','block_body',1,'p_block_body','ajs_parser.py',62),
  ('declaration -> LET declaration_content','declaration',2,'p_declaration','ajs_parser.py',67),
  ('declaration_content -> item , declaration_content','declaration_content',3,'p_declaration_content','ajs_parser.py',73),
  ('declaration_content -> item','declaration_content',1,'p_declaration_content','ajs_parser.py',74),
  ('item -> STRING_IMPLICIT : STRING_IMPLICIT','item',3,'p_item','ajs_parser.py',79),
  ('item -> STRING_IMPLICIT','item',1,'p_item','ajs_parser.py',80),
  ('assignment -> declaration ASSIGN expression','assignment',3,'p_assignment','ajs_parser.py',86),
  ('assignment -> STRING_IMPLICIT ASSIGN expression','assignment',3,'p_assignment','ajs_parser.py',87),
  ('definition -> TYPE STRING_IMPLICIT ASSIGN object','definition',4,'p_definition','ajs_parser.py',92),
  ('object -> { object_content }','object',3,'p_object','ajs_parser.py',97),
  ('object_content -> object_item , object_content','object_content',3,'p_object_content','ajs_parser.py',103),
  ('object_content -> object_item','object_content',1,'p_object_content','ajs_parser.py',104),
  ('object_content -> empty','object_content',1,'p_object_content','ajs_parser.py',105),
  ('object_item -> key : basic_type','object_item',3,'p_object_item','ajs_parser.py',110),
  ('object_item -> key : expression','object_item',3,'p_object_item','ajs_parser.py',111),
  ('key -> STRING_EXPLICIT','key',1,'p_key','ajs_parser.py',116),
  ('key -> STRING_IMPLICIT','key',1,'p_key','ajs_parser.py',117),
  ('type -> basic_type','type',1,'p_type','ajs_parser.py',123),
  ('type -> STRING_IMPLICIT','type',1,'p_type','ajs_parser.py',124),
  ('basic_type -> INT','basic_type',1,'p_basic_type','ajs_parser.py',130),
  ('basic_type -> FLOAT','basic_type',1,'p_basic_type','ajs_parser.py',131),
  ('basic_type -> CHARACTER','basic_type',1,'p_basic_type','ajs_parser.py',132),
  ('basic_type -> BOOLEAN','basic_type',1,'p_basic_type','ajs_parser.py',133),
  ('if_conditional -> IF ( expression ) { block_body }','if_conditional',7,'p_if_conditional','ajs_parser.py',139),
  ('if_conditional -> IF ( expression ) { block_body } ELSE { block_body }','if_conditional',11,'p_if_conditional','ajs_parser.py',140),
  ('while_loop -> WHILE ( expression ) { block_body }','while_loop',7,'p_while_loop','ajs_parser.py',145),
  ('function -> FUNCTION STRING_IMPLICIT ( argument_list ) : type { block_body RETURN expression ; }','function',13,'p_function','ajs_parser.py',150),
  ('argument_list -> argument_list_nonempty','argument_list',1,'p_argument_list','ajs_parser.py',155),
  ('argument_list -> empty','argument_list',1,'p_argument_list','ajs_parser.py',156),
  ('argument_list_nonempty -> STRING_IMPLICIT : type , argument_list_nonempty','argument_list_nonempty',5,'p_argument_list_nonempty','ajs_parser.py',161),
  ('argument_list_nonempty -> STRING_IMPLICIT : type','argument_list_nonempty',3,'p_argument_list_nonempty','ajs_parser.py',162),
  ('expression -> ( expression )','expression',3,'p_expression','ajs_parser.py',167),
  ('expression -> expression PLUS expression','expression',3,'p_expression','ajs_parser.py',168),
  ('expression -> expression MINUS expression','expression',3,'p_expression','ajs_parser.py',169),
  ('expression -> expression TIMES expression','expression',3,'p_expression','ajs_parser.py',170),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','ajs_parser.py',171),
  ('expression -> expression AND expression','expression',3,'p_expression','ajs_parser.py',172),
  ('expression -> expression OR expression','expression',3,'p_expression','ajs_parser.py',173),
  ('expression -> expression LT expression','expression',3,'p_expression','ajs_parser.py',174),
  ('expression -> expression LE expression','expression',3,'p_expression','ajs_parser.py',175),
  ('expression -> expression EQ expression','expression',3,'p_expression','ajs_parser.py',176),
  ('expression -> expression GE expression','expression',3,'p_expression','ajs_parser.py',177),
  ('expression -> expression GT expression','expression',3,'p_expression','ajs_parser.py',178),
  ('expression -> PLUS expression','expression',2,'p_expression','ajs_parser.py',179),
  ('expression -> MINUS expression','expression',2,'p_expression','ajs_parser.py',180),
  ('expression -> NOT expression','expression',2,'p_expression','ajs_parser.py',181),
  ('expression -> INTEGER','expression',1,'p_expression','ajs_parser.py',182),
  ('expression -> REAL','expression',1,'p_expression','ajs_parser.py',183),
  ('expression -> CHAR','expression',1,'p_expression','ajs_parser.py',184),
  ('expression -> TR','expression',1,'p_expression','ajs_parser.py',185),
  ('expression -> FL','expression',1,'p_expression','ajs_parser.py',186),
  ('expression -> NULL','expression',1,'p_expression','ajs_parser.py',187),
  ('expression -> STRING_IMPLICIT','expression',1,'p_expression','ajs_parser.py',188),
  ('expression -> function_call','expression',1,'p_expression','ajs_parser.py',189),
  ('expression -> object_call','expression',1,'p_expression','ajs_parser.py',190),
  ('expression -> object','expression',1,'p_expression','ajs_parser.py',191),
  ('function_call -> STRING_IMPLICIT ( function_call_list )','function_call',4,'p_function_call','ajs_parser.py',218),
  ('function_call_list -> function_call_list_nonempty','function_call_list',1,'p_function_call_list','ajs_parser.py',223),
  ('function_call_list -> empty','function_call_list',1,'p_function_call_list','ajs_parser.py',224),
  ('function_call_list_nonempty -> expression , function_call_list_nonempty','function_call_list_nonempty',3,'p_function_call_list_nonempty','ajs_parser.py',229),
  ('function_call_list_nonempty -> expression','function_call_list_nonempty',1,'p_function_call_list_nonempty','ajs_parser.py',230),
  ('object_call -> STRING_IMPLICIT object_attribute_list','object_call',2,'p_object_call','ajs_parser.py',235),
  ('object_attribute_list -> [ STRING_EXPLICIT ] object_attribute_list','object_attribute_list',4,'p_object_attribute_list','ajs_parser.py',240),
  ('object_attribute_list -> . STRING_IMPLICIT object_attribute_list','object_attribute_list',3,'p_object_attribute_list','ajs_parser.py',241),
  ('object_attribute_list -> [ STRING_EXPLICIT ]','object_attribute_list',3,'p_object_attribute_list','ajs_parser.py',242),
  ('object_attribute_list -> . STRING_IMPLICIT','object_attribute_list',2,'p_object_attribute_list','ajs_parser.py',243),
  ('empty -> <empty>','empty',0,'p_empty','ajs_parser.py',248),
]
